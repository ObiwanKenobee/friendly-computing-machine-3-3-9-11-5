# AWS Elastic Beanstalk Configuration for QuantumVest Enterprise Platform

option_settings:
  # Application environment variables
  aws:elasticbeanstalk:application:environment:
    NODE_ENV: production
    VITE_API_URL: https://api.quantumvest.com
    VITE_WEBSOCKET_URL: wss://api.quantumvest.com/ws
    VITE_SENTRY_DSN: __SENTRY_DSN__
    VITE_AMPLITUDE_API_KEY: __AMPLITUDE_API_KEY__
    VITE_MIXPANEL_TOKEN: __MIXPANEL_TOKEN__
    
  # Load balancer configuration
  aws:elasticbeanstalk:environment:
    LoadBalancerType: application
    ServiceRole: aws-elasticbeanstalk-service-role
    
  # Auto scaling configuration
  aws:autoscaling:asg:
    MinSize: 2
    MaxSize: 10
    Cooldown: 300
    
  aws:autoscaling:trigger:
    MeasureName: CPUUtilization
    Unit: Percent
    UpperThreshold: 75
    UpperBreachScaleIncrement: 2
    LowerThreshold: 25
    LowerBreachScaleIncrement: -1
    
  # Instance configuration
  aws:ec2:instances:
    InstanceTypes: t3.medium,t3.large
    EnableSpot: true
    SpotFleetOnDemandBase: 1
    SpotFleetOnDemandAboveBasePercentage: 25
    
  # VPC configuration
  aws:ec2:vpc:
    VPCId: vpc-12345678
    Subnets: subnet-12345678,subnet-87654321
    ELBSubnets: subnet-12345678,subnet-87654321
    ELBScheme: public
    AssociatePublicIpAddress: true
    
  # Health check configuration
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
    HealthCheckSuccessThreshold: Ok
    HealthCheckURL: /health
    
  # Load balancer health check
  aws:elbv2:loadbalancer:
    IdleTimeout: 300
    AccessLogsS3Enabled: true
    AccessLogsS3Bucket: quantumvest-lb-logs
    
  aws:elbv2:listener:443:
    Protocol: HTTPS
    SSLCertificateArns: arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012
    SSLPolicy: ELBSecurityPolicy-TLS-1-2-2017-01
    
  # Process configuration
  aws:elasticbeanstalk:container:nodejs:
    NodeCommand: "npm start"
    NodeVersion: 18.17.0
    GzipCompression: true
    ProxyServer: nginx
    
  # Monitoring and logging
  aws:elasticbeanstalk:cloudwatch:logs:
    StreamLogs: true
    DeleteOnTerminate: false
    RetentionInDays: 30
    
  aws:elasticbeanstalk:cloudwatch:logs:health:
    HealthStreamingEnabled: true
    DeleteOnTerminate: false
    RetentionInDays: 7

files:
  "/etc/nginx/conf.d/websocket.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # WebSocket configuration for real-time features
      map $http_upgrade $connection_upgrade {
          default upgrade;
          '' close;
      }
      
      upstream websocket {
          server localhost:3000;
      }
      
      server {
          listen 80;
          
          location /ws/ {
              proxy_pass http://websocket;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection $connection_upgrade;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # WebSocket timeout settings
              proxy_read_timeout 86400;
              proxy_send_timeout 86400;
          }
      }

  "/opt/elasticbeanstalk/tasks/taillogs.d/nginx-access.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      /var/log/nginx/access.log

  "/opt/elasticbeanstalk/tasks/taillogs.d/nginx-error.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      /var/log/nginx/error.log

  "/opt/elasticbeanstalk/tasks/bundlelogs.d/nginx-logs.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      /var/log/nginx/*log

commands:
  01_install_certbot:
    command: "yum install -y certbot python3-certbot-nginx"
    ignoreErrors: true
    
  02_setup_ssl_renewal:
    command: "echo '0 12 * * * /usr/bin/certbot renew --quiet' | crontab -"
    ignoreErrors: true

container_commands:
  01_reload_nginx:
    command: "service nginx reload"
    leader_only: true
